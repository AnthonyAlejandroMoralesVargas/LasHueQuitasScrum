trigger:
- master

pool:
  name: 'LocalAgentPool'

variables:
  javaHome: 'C:\Program Files\Java\jdk-22'
  mavenHome: 'C:\Program Files\Apache\Maven'

stages:
- stage: BuildAndTest
  displayName: 'Build and Test'
  jobs:
  - job: Build
    displayName: 'Build Project'
    steps:
    # Configurar Variables de Entorno para Java y Maven
    - powershell: |
        Write-Host "Setting up environment variables..."
        [Environment]::SetEnvironmentVariable("JAVA_HOME", "${{ variables.javaHome }}", "Process")
        [Environment]::SetEnvironmentVariable("Path", "${{ variables.javaHome }}\bin;" + [Environment]::GetEnvironmentVariable("Path", "Process"), "Process")
        [Environment]::SetEnvironmentVariable("M2_HOME", "${{ variables.mavenHome }}", "Process")
        [Environment]::SetEnvironmentVariable("Path", "${{ variables.mavenHome }}\bin;" + [Environment]::GetEnvironmentVariable("Path", "Process"), "Process")

        Write-Host "Checking Java installation..."
        try {
            java -version
            Write-Host "Java is configured properly."
        } catch {
            Write-Host "Error: Java is not configured properly."
            exit 1
        }

        Write-Host "Checking Maven installation..."
        try {
            & "${{ variables.mavenHome }}\bin\mvn.cmd" -version
            Write-Host "Maven is configured properly."
        } catch {
            Write-Host "Error: Maven is not configured properly."
            exit 1
        }
        Write-Host "Environment setup completed."
      displayName: 'Set Up Java and Maven'

    # Debug Variables
    - powershell: |
        Write-Host "DEBUG: Checking environment variables..."
        Write-Host "JAVA_HOME: $env:JAVA_HOME"
        Write-Host "M2_HOME: $env:M2_HOME"
        Write-Host "PATH: $env:Path"
      displayName: 'Debug Environment Variables'

    # Construir Proyecto con Maven (clean install)
    - powershell: |
        try {
            Write-Host "Building Maven Project..."
            & "${{ variables.mavenHome }}\bin\mvn.cmd" clean install
            if (!(Test-Path -Path "$(System.DefaultWorkingDirectory)\target")) {
                Write-Host "Error: Maven did not generate the 'target' directory."
                exit 1
            }
            Write-Host "Maven Build completed successfully."
        } catch {
            Write-Host "Error during Maven build: $($_.Exception.Message)"
            exit 1
        }
      displayName: 'Build with Maven (Clean Install)'

    # Publicar Artefactos
    - powershell: |
        Write-Host "Forcing Maven Install before publishing artifact..."
        try {
            & "${{ variables.mavenHome }}\bin\mvn.cmd" install
            Write-Host "Maven Install completed successfully."
        } catch {
            Write-Host "Error during Maven install: $($_.Exception.Message)"
            exit 1
        }
      displayName: 'Force Maven Install'

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(System.DefaultWorkingDirectory)\target\*.war'
        artifactName: 'drop'
      displayName: 'Publish Artifact'
